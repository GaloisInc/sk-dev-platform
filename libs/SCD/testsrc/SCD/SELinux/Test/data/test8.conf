#BOOL b true
#BOOL bb true
#ACCESS u:r:t u:r:tnot c
#ACCESS u:r:t u:r:tand c
#ACCESS u:r:t u:r:tor c
#ACCESS u:r:t u:r:txor c
#ACCESS u:r:t u:r:teq c
#ACCESS u:r:t u:r:tne c
#BOOL b true
#BOOL bb false
#ACCESS u:r:t u:r:tnot c
#ACCESS u:r:t u:r:tand c
#ACCESS u:r:t u:r:tor c
#ACCESS u:r:t u:r:txor c
#ACCESS u:r:t u:r:teq c
#ACCESS u:r:t u:r:tne c
#BOOL b false
#BOOL bb true
#ACCESS u:r:t u:r:tnot c
#ACCESS u:r:t u:r:tand c
#ACCESS u:r:t u:r:tor c
#ACCESS u:r:t u:r:txor c
#ACCESS u:r:t u:r:teq c
#ACCESS u:r:t u:r:tne c
#BOOL b false
#BOOL bb false
#ACCESS u:r:t u:r:tnot c
#ACCESS u:r:t u:r:tand c
#ACCESS u:r:t u:r:tor c
#ACCESS u:r:t u:r:txor c
#ACCESS u:r:t u:r:teq c
#ACCESS u:r:t u:r:tne c
class c
sid policy_grammar_requires_at_least_one_sid
class c { p }
type t;
type tnot;
type tand;
type tor;
type txor;
type teq;
type tne;
bool b true;
bool bb true;
role r types { t tnot tand tor txor teq tne };
if (!b) { allow t tnot : c p; }
if (b && bb) { allow t tand : c p; }
if (b || bb) { allow t tor : c p; }
if (b ^ bb) { allow t txor : c p; }
if (b == bb) { allow t teq : c p; }
if (b != bb) { allow t tne : c p; }
user u roles { r };
sid policy_grammar_requires_at_least_one_sid u:r:t
